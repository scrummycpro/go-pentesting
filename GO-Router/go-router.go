package main

import (
	"fmt"
	"log"
	"net/http"
	"net/http/httputil"
	"net/url"
	"os"
)

func main() {
	// Create a new HTTP server mux
	mux := http.NewServeMux()

	// Define a handler function that logs incoming requests
	mux.HandleFunc("/", func(w http.ResponseWriter, r *http.Request) {
		// Log the incoming request
		log.Printf("Incoming Request: %s %s %s", r.Method, r.URL.Path, r.Proto)

		// Create a reverse proxy
		targetURL := "http://localhost:8081" // Change this to your actual target URL
		target, err := url.Parse(targetURL)
		if err != nil {
			http.Error(w, "Bad Gateway", http.StatusBadGateway)
			return
		}

		proxy := httputil.NewSingleHostReverseProxy(target)

		// Serve the request using the reverse proxy
		proxy.ServeHTTP(w, r)
	})

	// Define a handler function that logs all traffic
	mux.HandleFunc("/traffic", func(w http.ResponseWriter, r *http.Request) {
		// Log all traffic
		log.Printf("All Traffic: %s %s %s", r.Method, r.URL.Path, r.Proto)
	})

	// Start the HTTP server
	port := ":8080" // Default port
	if len(os.Args) > 1 {
		port = ":" + os.Args[1] // Use the provided port as a parameter
	}

	fmt.Printf("Starting server on port %s\n", port)
	if err := http.ListenAndServe(port, mux); err != nil {
		log.Fatalf("Server error: %v", err)
	}
}
